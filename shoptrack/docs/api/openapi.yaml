openapi: 3.0.3
info:
  title: ShopTrack API
  version: 1.0.0
  description: API documentation for the ShopTrack e-commerce platform.

servers:
  - url: http://127.0.0.1:5000

paths:
  /products/:
    get:
      summary: List all products
      description: Retrieve a list of available products.
      responses:
        '200':
          description: A list of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error.

  /cart/:
    get:
      summary: View cart contents
      description: Retrieve the current items in the shopping cart.
      responses:
        '200':
          description: Cart contents returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Add a product to the cart
      description: Add a specified product to the shopping cart.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
      responses:
        '201':
          description: Product added to cart.
        '404':
          description: Product not found.
    delete:
      summary: Clear the cart
      description: Remove all items from the shopping cart.
      responses:
        '200':
          description: Cart cleared successfully.

  /checkout/:
    post:
      summary: Checkout and create an order
      description: Complete the purchase for the items in the cart.
      responses:
        '201':
          description: Order placed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request (e.g., empty cart).

  /admin/add-product:
    post:
      summary: Add a new product (Admin)
      description: Admin endpoint to add a new product to the catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product added successfully.

  /webhooks/new-order:
    post:
      summary: Simulate webhook for new order
      description: Stub endpoint to simulate a webhook call for a new order.
      responses:
        '200':
          description: Webhook triggered successfully.

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Wireless Mouse
        price:
          type: number
          format: float
          example: 29.99
    ProductInput:
      type: object
      properties:
        name:
          type: string
          example: USB-C Cable
        price:
          type: number
          format: float
          example: 9.99
    Order:
      type: object
      properties:
        order_id:
          type: integer
          example: 1234
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total_amount:
          type: number
          format: float
          example: 59.98
